import{a as b,b as n}from"./chunk-R7MXNWAB.js";import{n as p,w as d}from"./chunk-4KVER4QO.js";import{R as l,W as a}from"./chunk-TYF7JRNT.js";var i=class extends Error{};i.prototype.name="InvalidTokenError";function f(t){return decodeURIComponent(atob(t).replace(/(.)/g,(e,r)=>{let o=r.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}function m(t){let e=t.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return f(e)}catch{return atob(e)}}function h(t,e){if(typeof t!="string")throw new i("Invalid token specified: must be a string");e||(e={});let r=e.header===!0?0:1,o=t.split(".")[r];if(typeof o!="string")throw new i(`Invalid token specified: missing part #${r+1}`);let c;try{c=m(o)}catch(s){throw new i(`Invalid token specified: invalid base64 for part #${r+1} (${s.message})`)}try{return JSON.parse(c)}catch(s){throw new i(`Invalid token specified: invalid json for part #${r+1} (${s.message})`)}}var u=class t{httpClient=a(p);cookieService=a(b);router=a(d);registerForm(e){return this.httpClient.post(n.baseUrl+"auth/signup",e)}loginForm(e){return this.httpClient.post(n.baseUrl+"auth/signin",e)}logOut(){this.cookieService.delete("token"),this.router.navigate(["/login"])}docodeToken(){let e;try{e=h(this.cookieService.get("token"))}catch{this.logOut()}return e}submitVerifyEmail(e){return this.httpClient.post(n.baseUrl+"auth/forgotPasswords",e)}submitVerifyCode(e){return this.httpClient.post(n.baseUrl+"auth/verifyResetCode",e)}submitResetPassword(e){return this.httpClient.post(n.baseUrl+"auth/resetPassword",e)}static \u0275fac=function(r){return new(r||t)};static \u0275prov=l({token:t,factory:t.\u0275fac,providedIn:"root"})};export{u as a};
