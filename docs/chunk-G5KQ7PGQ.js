import { a as oe, c as le, e as pe, i as ce, k as ge } from "./chunk-4OH2CZKK.js"; import { a as de, b as ue } from "./chunk-7X3G2L4J.js"; import "./chunk-ASF2U23D.js"; import "./chunk-4PTIEP3X.js"; import "./chunk-VFFMNKEZ.js"; import "./browser/chunk-R7MXNWAB.js"; import { c as ae, d as re, h as se, j as N } from "./chunk-4KVER4QO.js"; import { $a as W, Ab as w, Fb as P, Hb as p, Oa as s, Ob as m, Qb as T, S as H, Sb as g, Tb as b, Ua as F, Ub as v, Vb as Q, W as $, Wb as Z, Xb as ee, Yb as te, Za as B, _a as j, aa as _, ab as A, ba as x, bc as ne, cb as C, eb as L, ec as k, gc as S, kb as q, oa as U, pb as G, qb as Y, rb as d, sb as o, sc as ie, tb as c, ub as X, yb as J, zb as K } from "./chunk-TYF7JRNT.js"; import "./chunk-4CLCTAJ7.js"; function be(n, i) { if (n & 1) { let e = w(); o(0, "a", 12), P("keyup.enter", function () { _(e), p(3); let a = m(1); return x(a.previous()) })("click", function () { _(e), p(3); let a = m(1); return x(a.previous()) }), g(1), o(2, "span", 13), g(3), c()() } if (n & 2) { let e = p(3); s(), v(" ", e.previousLabel, " "), s(2), b(e.screenReaderPageLabel) } } function ve(n, i) { if (n & 1 && (o(0, "span", 14), g(1), o(2, "span", 13), g(3), c()()), n & 2) { let e = p(3); s(), v(" ", e.previousLabel, " "), s(2), b(e.screenReaderPageLabel) } } function Ie(n, i) { if (n & 1 && (o(0, "li", 9), C(1, be, 4, 2, "a", 10)(2, ve, 4, 2, "span", 11), c()), n & 2) { p(2); let e = m(1); T("disabled", e.isFirstPage()), s(), d("ngIf", 1 < e.getCurrent()), s(), d("ngIf", e.isFirstPage()) } } function ye(n, i) { if (n & 1) { let e = w(); o(0, "a", 12), P("keyup.enter", function () { _(e); let a = p().$implicit; p(2); let r = m(1); return x(r.setCurrent(a.value)) })("click", function () { _(e); let a = p().$implicit; p(2); let r = m(1); return x(r.setCurrent(a.value)) }), o(1, "span", 13), g(2), c(), o(3, "span"), g(4), k(5, "number"), c()() } if (n & 2) { let e = p().$implicit, t = p(2); s(2), v("", t.screenReaderPageLabel, " "), s(2), b(e.label === "..." ? e.label : S(5, 2, e.label, "")) } } function Le(n, i) { if (n & 1 && (J(0), o(1, "span", 16)(2, "span", 13), g(3), c(), o(4, "span"), g(5), k(6, "number"), c()(), K()), n & 2) { let e = p().$implicit, t = p(2); s(3), v("", t.screenReaderCurrentLabel, " "), s(2), b(e.label === "..." ? e.label : S(6, 2, e.label, "")) } } function ke(n, i) { if (n & 1 && (o(0, "li"), C(1, ye, 6, 5, "a", 10)(2, Le, 7, 5, "ng-container", 15), c()), n & 2) { let e = i.$implicit; p(2); let t = m(1); T("current", t.getCurrent() === e.value)("ellipsis", e.label === "..."), s(), d("ngIf", t.getCurrent() !== e.value), s(), d("ngIf", t.getCurrent() === e.value) } } function Se(n, i) { if (n & 1) { let e = w(); o(0, "a", 12), P("keyup.enter", function () { _(e), p(3); let a = m(1); return x(a.next()) })("click", function () { _(e), p(3); let a = m(1); return x(a.next()) }), g(1), o(2, "span", 13), g(3), c()() } if (n & 2) { let e = p(3); s(), v(" ", e.nextLabel, " "), s(2), b(e.screenReaderPageLabel) } } function we(n, i) { if (n & 1 && (o(0, "span", 14), g(1), o(2, "span", 13), g(3), c()()), n & 2) { let e = p(3); s(), v(" ", e.nextLabel, " "), s(2), b(e.screenReaderPageLabel) } } function Te(n, i) { if (n & 1 && (o(0, "li", 17), C(1, Se, 4, 2, "a", 10)(2, we, 4, 2, "span", 11), c()), n & 2) { p(2); let e = m(1); T("disabled", e.isLastPage()), s(), d("ngIf", !e.isLastPage()), s(), d("ngIf", e.isLastPage()) } } function Ee(n, i) { if (n & 1 && (o(0, "ul", 4), C(1, Ie, 3, 4, "li", 5), o(2, "li", 6), g(3), c(), C(4, ke, 3, 6, "li", 7)(5, Te, 3, 4, "li", 8), c()), n & 2) { let e = p(), t = m(1); T("responsive", e.responsive), s(), d("ngIf", e.directionLinks), s(2), Q(" ", t.getCurrent(), " / ", t.getLastPage(), " "), s(), d("ngForOf", t.pages)("ngForTrackBy", e.trackByIndex), s(), d("ngIf", e.directionLinks) } } var E = class { constructor() { this.change = new L, this.instances = {}, this.DEFAULT_ID = "DEFAULT_PAGINATION_ID" } defaultId() { return this.DEFAULT_ID } register(i) { return i.id == null && (i.id = this.DEFAULT_ID), this.instances[i.id] ? this.updateInstance(i) : (this.instances[i.id] = i, !0) } updateInstance(i) { let e = !1; for (let t in this.instances[i.id]) i[t] !== this.instances[i.id][t] && (this.instances[i.id][t] = i[t], e = !0); return e } getCurrentPage(i) { return this.instances[i] ? this.instances[i].currentPage : 1 } setCurrentPage(i, e) { if (this.instances[i]) { let t = this.instances[i], a = Math.ceil(t.totalItems / t.itemsPerPage); e <= a && 1 <= e && (this.instances[i].currentPage = e, this.change.emit(i)) } } setTotalItems(i, e) { this.instances[i] && 0 <= e && (this.instances[i].totalItems = e, this.change.emit(i)) } setItemsPerPage(i, e) { this.instances[i] && (this.instances[i].itemsPerPage = e, this.change.emit(i)) } getInstance(i = this.DEFAULT_ID) { return this.instances[i] ? this.clone(this.instances[i]) : {} } clone(i) { var e = {}; for (var t in i) i.hasOwnProperty(t) && (e[t] = i[t]); return e } }, De = Number.MAX_SAFE_INTEGER, fe = (() => { class n { constructor(e) { this.service = e, this.state = {} } transform(e, t) { if (!(e instanceof Array)) { let I = t.id || this.service.defaultId(); return this.state[I] ? this.state[I].slice : e } let a = t.totalItems && t.totalItems !== e.length, r = this.createInstance(e, t), l = r.id, u, f, h = r.itemsPerPage, D = this.service.register(r); if (!a && e instanceof Array) { if (h = +h || De, u = (r.currentPage - 1) * h, f = u + h, this.stateIsIdentical(l, e, u, f)) return this.state[l].slice; { let M = e.slice(u, f); return this.saveState(l, e, M, u, f), this.service.change.emit(l), M } } else return D && this.service.change.emit(l), this.saveState(l, e, e, u, f), e } createInstance(e, t) { return this.checkConfig(t), { id: t.id != null ? t.id : this.service.defaultId(), itemsPerPage: +t.itemsPerPage || 0, currentPage: +t.currentPage || 1, totalItems: +t.totalItems || e.length } } checkConfig(e) { let a = ["itemsPerPage", "currentPage"].filter(r => !(r in e)); if (0 < a.length) throw new Error(`PaginatePipe: Argument is missing the following required properties: ${a.join(", ")}`) } saveState(e, t, a, r, l) { this.state[e] = { collection: t, size: t.length, slice: a, start: r, end: l } } stateIsIdentical(e, t, a, r) { let l = this.state[e]; return !l || !(l.size === t.length && l.start === a && l.end === r) ? !1 : l.slice.every((f, h) => f === t[a + h]) } } return n.\u0275fac = function (e) { return new (e || n)(F(E, 16)) }, n.\u0275pipe = A({ name: "paginate", type: n, pure: !1, standalone: !1 }), n })(); var Me = (() => { class n { constructor(e, t) { this.service = e, this.changeDetectorRef = t, this.maxSize = 7, this.pageChange = new L, this.pageBoundsCorrection = new L, this.pages = [], this.changeSub = this.service.change.subscribe(a => { this.id === a && (this.updatePageLinks(), this.changeDetectorRef.markForCheck(), this.changeDetectorRef.detectChanges()) }) } ngOnInit() { this.id === void 0 && (this.id = this.service.defaultId()), this.updatePageLinks() } ngOnChanges(e) { this.updatePageLinks() } ngOnDestroy() { this.changeSub.unsubscribe() } previous() { this.checkValidId(), this.setCurrent(this.getCurrent() - 1) } next() { this.checkValidId(), this.setCurrent(this.getCurrent() + 1) } isFirstPage() { return this.getCurrent() === 1 } isLastPage() { return this.getLastPage() === this.getCurrent() } setCurrent(e) { this.pageChange.emit(e) } getCurrent() { return this.service.getCurrentPage(this.id) } getLastPage() { let e = this.service.getInstance(this.id); return e.totalItems < 1 ? 1 : Math.ceil(e.totalItems / e.itemsPerPage) } getTotalItems() { return this.service.getInstance(this.id).totalItems } checkValidId() { this.service.getInstance(this.id).id == null && console.warn(`PaginationControlsDirective: the specified id "${this.id}" does not match any registered PaginationInstance`) } updatePageLinks() { let e = this.service.getInstance(this.id), t = this.outOfBoundCorrection(e); t !== e.currentPage ? setTimeout(() => { this.pageBoundsCorrection.emit(t), this.pages = this.createPageArray(e.currentPage, e.itemsPerPage, e.totalItems, this.maxSize) }) : this.pages = this.createPageArray(e.currentPage, e.itemsPerPage, e.totalItems, this.maxSize) } outOfBoundCorrection(e) { let t = Math.ceil(e.totalItems / e.itemsPerPage); return t < e.currentPage && 0 < t ? t : e.currentPage < 1 ? 1 : e.currentPage } createPageArray(e, t, a, r) { r = +r; let l = [], u = Math.max(Math.ceil(a / t), 1), f = Math.ceil(r / 2), h = e <= f, D = u - f < e, I = !h && !D, M = r < u, y = 1; for (; y <= u && y <= r;) { let R, O = this.calculatePageNumber(y, e, r, u), Ce = y === 2 && (I || D), Pe = y === r - 1 && (I || h); M && (Ce || Pe) ? R = "..." : R = O, l.push({ label: R, value: O }), y++ } return l } calculatePageNumber(e, t, a, r) { let l = Math.ceil(a / 2); return e === a ? r : e === 1 ? e : a < r ? r - l < t ? r - a + e : l < t ? t - l + e : e : e } } return n.\u0275fac = function (e) { return new (e || n)(F(E), F(ie)) }, n.\u0275dir = W({ type: n, selectors: [["pagination-template"], ["", "pagination-template", ""]], inputs: { id: "id", maxSize: "maxSize" }, outputs: { pageChange: "pageChange", pageBoundsCorrection: "pageBoundsCorrection" }, exportAs: ["paginationApi"], standalone: !1, features: [U] }), n })(); function z(n) { return !!n && n !== "false" } var he = (() => {
    class n { constructor() { this.maxSize = 7, this.previousLabel = "Previous", this.nextLabel = "Next", this.screenReaderPaginationLabel = "Pagination", this.screenReaderPageLabel = "page", this.screenReaderCurrentLabel = "You're on page", this.pageChange = new L, this.pageBoundsCorrection = new L, this._directionLinks = !0, this._autoHide = !1, this._responsive = !1 } get directionLinks() { return this._directionLinks } set directionLinks(e) { this._directionLinks = z(e) } get autoHide() { return this._autoHide } set autoHide(e) { this._autoHide = z(e) } get responsive() { return this._responsive } set responsive(e) { this._responsive = z(e) } trackByIndex(e) { return e } } return n.\u0275fac = function (e) { return new (e || n) }, n.\u0275cmp = B({
        type: n, selectors: [["pagination-controls"]], inputs: { id: "id", maxSize: "maxSize", directionLinks: "directionLinks", autoHide: "autoHide", responsive: "responsive", previousLabel: "previousLabel", nextLabel: "nextLabel", screenReaderPaginationLabel: "screenReaderPaginationLabel", screenReaderPageLabel: "screenReaderPageLabel", screenReaderCurrentLabel: "screenReaderCurrentLabel" }, outputs: { pageChange: "pageChange", pageBoundsCorrection: "pageBoundsCorrection" }, standalone: !1, decls: 4, vars: 4, consts: [["p", "paginationApi"], [3, "pageChange", "pageBoundsCorrection", "id", "maxSize"], ["role", "navigation"], ["class", "ngx-pagination", 3, "responsive", 4, "ngIf"], [1, "ngx-pagination"], ["class", "pagination-previous", 3, "disabled", 4, "ngIf"], [1, "small-screen"], [3, "current", "ellipsis", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "pagination-next", 3, "disabled", 4, "ngIf"], [1, "pagination-previous"], ["tabindex", "0", 3, "keyup.enter", "click", 4, "ngIf"], ["aria-disabled", "true", 4, "ngIf"], ["tabindex", "0", 3, "keyup.enter", "click"], [1, "show-for-sr"], ["aria-disabled", "true"], [4, "ngIf"], ["aria-live", "polite"], [1, "pagination-next"]], template: function (e, t) { if (e & 1) { let a = w(); o(0, "pagination-template", 1, 0), P("pageChange", function (l) { return _(a), x(t.pageChange.emit(l)) })("pageBoundsCorrection", function (l) { return _(a), x(t.pageBoundsCorrection.emit(l)) }), o(2, "nav", 2), C(3, Ee, 6, 8, "ul", 3), c()() } if (e & 2) { let a = m(1); d("id", t.id)("maxSize", t.maxSize), s(2), q("aria-label", t.screenReaderPaginationLabel), s(), d("ngIf", !(t.autoHide && a.pages.length <= 1)) } }, dependencies: [Me, re, ae, se], styles: [`.ngx-pagination{margin-left:0;margin-bottom:1rem}.ngx-pagination:before,.ngx-pagination:after{content:" ";display:table}.ngx-pagination:after{clear:both}.ngx-pagination li{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;margin-right:.0625rem;border-radius:0}.ngx-pagination li{display:inline-block}.ngx-pagination a,.ngx-pagination button{color:#0a0a0a;display:block;padding:.1875rem .625rem;border-radius:0}.ngx-pagination a:hover,.ngx-pagination button:hover{background:#e6e6e6}.ngx-pagination .current{padding:.1875rem .625rem;background:#2199e8;color:#fefefe;cursor:default}.ngx-pagination .disabled{padding:.1875rem .625rem;color:#cacaca;cursor:default}.ngx-pagination .disabled:hover{background:transparent}.ngx-pagination a,.ngx-pagination button{cursor:pointer}.ngx-pagination .pagination-previous a:before,.ngx-pagination .pagination-previous.disabled:before{content:"\\ab";display:inline-block;margin-right:.5rem}.ngx-pagination .pagination-next a:after,.ngx-pagination .pagination-next.disabled:after{content:"\\bb";display:inline-block;margin-left:.5rem}.ngx-pagination .show-for-sr{position:absolute!important;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0)}.ngx-pagination .small-screen{display:none}@media screen and (max-width: 601px){.ngx-pagination.responsive .small-screen{display:inline-block}.ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next){display:none}}
`], encapsulation: 2, changeDetection: 0
    }), n
})(), _e = (() => { class n { } return n.\u0275fac = function (e) { return new (e || n) }, n.\u0275mod = j({ type: n }), n.\u0275inj = H({ providers: [E], imports: [[N]] }), n })(); var V = class n { transform(i, e) { return i.filter(t => t.title.toLowerCase().includes(e.toLowerCase())) } static \u0275fac = function (e) { return new (e || n) }; static \u0275pipe = A({ name: "search", type: n, pure: !0 }) }; var Be = (n, i, e) => ({ id: "foo", itemsPerPage: n, currentPage: i, totalItems: e }), Ae = (n, i) => i.id; function Ne(n, i) { if (n & 1 && X(0, "app-card", 5), n & 2) { let e = i.$implicit; d("product", e) } } var xe = class n { productsService = $(ue); productList = []; theSearch = ""; pageSize; p; total; ngOnInit() { this.loadProducts() } loadProducts(i = 1) { this.productsService.getallproducts(i).subscribe({ next: e => { console.log("API response:", e), this.productList = e.data, this.pageSize = e.metadata.limit, this.p = e.metadata.currentPage, this.total = e.results }, error: e => { console.error("there are error : check api ", e) } }) } static \u0275fac = function (e) { return new (e || n) }; static \u0275cmp = B({ type: n, selectors: [["app-products"]], decls: 12, vars: 11, consts: [[1, "bg-gray-100", "py-15", "border", "border-gray-400"], [1, "theContainer"], [1, "text-green-500", "text-5xl", "text-center", "font-medium"], ["type", "search", 1, "border", "border-green-600", "block", "w-1/2", "mx-auto", "my-10", 3, "ngModelChange", "ngModel"], [1, "parent", "mt-10", "grid", "sm:grid-cols-2", "md:grid-cols-3", "lg:grid-cols-4", "gap-4"], [3, "product"], [1, "flex", "justify-center", "pt-5"], ["id", "foo", 3, "pageChange"]], template: function (e, t) { e & 1 && (o(0, "section", 0)(1, "div", 1)(2, "h2", 2), g(3, " produts"), c(), o(4, "input", 3), te("ngModelChange", function (r) { return ee(t.theSearch, r) || (t.theSearch = r), r }), c(), o(5, "div", 4), G(6, Ne, 1, 1, "app-card", 5, Ae), k(8, "paginate"), k(9, "search"), c(), o(10, "div", 6)(11, "pagination-controls", 7), P("pageChange", function (r) { return t.loadProducts(r) }), c()()()()), e & 2 && (s(4), Z("ngModel", t.theSearch), s(2), Y(S(9, 4, S(8, 1, t.productList, ne(7, Be, t.pageSize, t.p, t.total)), t.theSearch))) }, dependencies: [N, de, _e, he, ce, oe, le, ge, pe, fe, V], encapsulation: 2 }) }; export { xe as ProductsComponent };
