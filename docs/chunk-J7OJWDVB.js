import { a as P } from "./chunk-WJHGVGB3.js"; import { a as I } from "./chunk-73SG3KBM.js"; import { b as i, d as w, f as F, h as C, j as E, l as S } from "./chunk-4OH2CZKK.js"; import "./chunk-R7MXNWAB.js"; import { w as y } from "./chunk-4KVER4QO.js"; import { Fb as b, Hb as h, Oa as r, Sb as p, Tb as v, W as l, Za as f, a as c, nb as d, ob as g, rb as o, sb as s, tb as a, ub as u } from "./chunk-TYF7JRNT.js"; import "./chunk-4CLCTAJ7.js"; function _(m, t) {./browser/chunk - TYF7JRNT.js(1, "i", 6), a()) } function R(m, t) { if (m & 1 && (s(0, "p", 5), p(1), a()), m & 2) { let n = h(); r(), v(n.msgError) } } var x = class m { authServices = l(I); router = l(y); fb = l(E); subscription = new c; flag = !0; isLoading = !1; msgError = ""; registerForm; ngOnInit() { this.initForm() } initForm() { this.registerForm = this.fb.group({ name: [null, [i.required, i.minLength(3), i.maxLength(20)]], email: [null, [i.required, i.email]], password: [null, [i.required, i.pattern(/^\w{6,}$/)]], rePassword: [null, i.required], phone: [null, [i.required, i.pattern(/^01[0125][0-9]{8}$/)]] }, { validators: this.confirmPassword }) } confirmPassword(t) { let n = t.get("password"), e = t.get("rePassword"); return !n || !e ? null : n.value !== e.value ? (e.setErrors({ mismatch: !0 }), { mismatch: !0 }) : (e.hasError("mismatch") && e.setErrors(null), null) } submitForm() { this.registerForm.valid ? (this.subscription.unsubscribe(), this.isLoading = !0, this.subscription = this.authServices.registerForm(this.registerForm.value).subscribe({ next: t => { console.log(t), t.message === "success" && (this.msgError = "", setTimeout(() => { this.router.navigate(["/login"]) }, 1e3)), this.isLoading = !1 }, error: t => { console.log(t), this.msgError = t.error.message, this.isLoading = !1 } })) : this.registerForm.markAllAsTouched() } static \u0275fac = function (n) { return new (n || m) }; static \u0275cmp = f({ type: m, selectors: [["app-register"]], decls: 15, vars: 24, consts: [[1, "w-10/12", "mx-auto", "bg-gray-200", "rounded-lg", "border", "border-gray-200", "p-4", "shadow-md", "md:1/2", "m-auto", "my-14"], [1, "text-center", "mb-3", "font-light", "text-3xl"], [3, "ngSubmit", "formGroup"], [3, "control", "typeInput", "idInput", "lableInput"], ["type", "submit", 1, "btn", "mt-4", 3, "disabled"], [1, "text-center", "text-red-900", "mt-4", "p-4", "bg-red-200"], [1, "fas", "fa-spinner", "animate-spin"]], template: function (n, e) { n & 1 && (s(0, "section", 0)(1, "h1", 1), p(2, "Register Now"), a(), s(3, "form", 2), b("ngSubmit", function () { return e.submitForm() }), u(4, "app-input", 3)(5, "app-input", 3), s(6, "app-input", 3), p(7, " Please Enter At Least 6 Words Or Numbers "), a(), u(8, "app-input", 3), s(9, "app-input", 3), p(10, " Please Enter Egyptian Number "), a(), s(11, "button", 4), p(12, " Register "), d(13, _, 2, 0, "span"), a(), d(14, R, 2, 1, "p", 5), a()()), n & 2 && (r(3), o("formGroup", e.registerForm), r(), o("control", e.registerForm.get("name"))("typeInput", "text")("idInput", "name")("lableInput", "Name"), r(), o("control", e.registerForm.get("email"))("typeInput", "email")("idInput", "email")("lableInput", "Emial"), r(), o("control", e.registerForm.get("password"))("typeInput", "password")("idInput", "password")("lableInput", "Password"), r(2), o("control", e.registerForm.get("rePassword"))("typeInput", "password")("idInput", "rePassword")("lableInput", "RePassword"), r(), o("control", e.registerForm.get("phone"))("typeInput", "tel")("idInput", "phone")("lableInput", "Phone"), r(2), o("disabled", e.isLoading), r(2), g(e.isLoading ? 13 : -1), r(), g(e.msgError ? 14 : -1)) }, dependencies: [S, F, w, C, P], encapsulation: 2 }) }; export { x as RegisterComponent };
